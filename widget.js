define(['jquery'], function($) {
  function parseFIO(fio) {
    var parts = fio.trim().split(/\s+/);
    var lastName = "", firstName = "", patronymic = "";

    function isPatronymic(word) { return /(–≤–∏—á|–≤–Ω–∞)$/i.test(word); }
    function isLastName(word) { return /(–æ–≤|–µ–≤|–∏–Ω|—ã–Ω|—Å–∫–∏–π|—Ü–∫–∏–π|–∞—è|—è—è|–∫–∞—è)$/i.test(word); }

    parts.forEach(function(word) {
      if (!patronymic && isPatronymic(word)) patronymic = word;
      else if (!lastName && isLastName(word)) lastName = word;
      else if (!firstName) firstName = word;
    });

    return { lastName, firstName, patronymic };
  }

  return {
    init: function() {
      console.log("‚úÖ FIO Parser Widget loaded");
      return true;
    },
    bind_actions: function() { return true; },
    render: function() { return true; },
    contacts: {
      selected: function() {
        var contact = AMOCRM.data.current_card.model.attributes;

        if (contact.name) {
          var parsed = parseFIO(contact.name);

          if (parsed.firstName) contact.first_name = parsed.firstName;
          if (parsed.lastName) contact.last_name = parsed.lastName;

          // –ï—Å–ª–∏ –µ—Å—Ç—å –∫–∞—Å—Ç–æ–º–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –æ—Ç—á–µ—Å—Ç–≤–∞ ‚Üí —Å—é–¥–∞ –µ–≥–æ ID
          // contact.custom_fields[123456] = parsed.patronymic;

          console.log("üîé Parsed FIO:", parsed);
        }
      }
    }
  };
});